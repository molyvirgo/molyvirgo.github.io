Transaction[
Transactions are not a law of nature; they were created with a purpose, namely to simplify the programming model for applications accessing a database. By using transactions, the application is free to ignore certain potential error scenarios and concurrency issues, because the database takes care of them instead (we call these safety guarantees)

1 Atomic[原子性]
2 Consistency[一致性]
3 Isolation[
					脏读		不可重复读	幻读
read uncommitted	 √          √        √
read commited        ×          √        √
repeatable read      ×          ×        √
serializable		 ×          ×        ×

多个事务可能会并行操作数据库 可能会导致出现现象： 脏读[一个事务读取另一个事务修改了但未提交事务的数据]，
								 不可重复读[强调 读-读， 一个事务多次读取一个数据，但另外的事务修改了该数据且提交该次事务
								 			导致第一个事务读取到数据前后不一致]
								 幻读[强调 读-写，事务在插入事先检测不存在的记录时，惊奇的发现这些数据已经存在了，之前的检测读获取到的数据如同鬼影一般]

spring 的事务隔离级别正是和这里对应 isolation
spring的事务传播行为Propagation 是spring独有的 用于描述 一个被事务传播行为修饰的method在被另一个method调用时该方法的事务是如何传播的
		如methoda 调用methodb methodb根据methoda 对事务的存在与否 做出反应[是否使用事务？使用methoda 的事务？开启新的事务？抛出异常？]

]
4 Durability[持久性]
]